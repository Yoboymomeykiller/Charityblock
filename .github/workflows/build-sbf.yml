name: Build SBF
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    # Make all cargo invocations default to Rust 1.86.0
    env:
      RUSTUP_TOOLCHAIN: "1.86.0"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Rust 1.86.0 (supports lockfile v4) ---
      - name: Rust toolchain 1.86.0
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: "1.86.0"
          components: rustfmt, clippy

      # --- Solana 1.18.20 (with mirror fallback) ---
      - name: Install Solana 1.18.20 (with fallback)
        shell: bash
        run: |
          set -eux
          SOLANA_VER=v1.18.20
          MIRROR1="https://github.com/solana-labs/solana/releases/download/${SOLANA_VER}/solana-release-x86_64-unknown-linux-gnu.tar.bz2"
          MIRROR2="https://release.solana.com/${SOLANA_VER}/solana-release-x86_64-unknown-linux-gnu.tar.bz2"

          OK=0
          for URL in "$MIRROR1" "$MIRROR2"; do
            if curl -fL --retry 3 --retry-delay 2 -o /tmp/sol.tar.bz2 "$URL"; then
              echo "Downloaded from $URL"
              OK=1
              break
            fi
            sleep 2
          done
          if [ "$OK" -ne 1 ]; then
            echo "Failed to download Solana ${SOLANA_VER} from all mirrors" >&2
            exit 1
          fi

          mkdir -p /tmp/sol-release
          tar -xjf /tmp/sol.tar.bz2 -C /tmp/sol-release

          mkdir -p "$HOME/solana-release/bin"
          cp -a /tmp/sol-release/solana-release/bin/* "$HOME/solana-release/bin"

          echo "$HOME/solana-release/bin" >> "$GITHUB_PATH"
          "$HOME/solana-release/bin/solana" --version

      # --- Install Anchor 0.31.1 (AVM first, cargo fallback) ---
      - name: Install AVM and Anchor 0.31.1
        shell: bash
        run: |
          set -eux
          echo "$HOME/.cargo/bin" >> "$GITHUB_PATH"

          cargo install --git https://github.com/coral-xyz/anchor --tag v0.31.1 avm --locked
          avm --version

          if ! avm install 0.31.1; then
            echo "AVM fetch failed; will fall back to cargo anchor-cli after this." >&2
          fi
          avm use 0.31.1 || true

          echo "$HOME/.avm/bin" >> "$GITHUB_PATH"

          if command -v anchor >/dev/null 2>&1; then
            anchor --version
            echo "ANCHOR_BIN=anchor" >> "$GITHUB_ENV"
          else
            cargo install anchor-cli --version 0.31.1 --locked
            echo "ANCHOR_BIN=$HOME/.cargo/bin/anchor" >> "$GITHUB_ENV"
            "$HOME/.cargo/bin/anchor" --version
          fi

      # --- HARD PIN cargo to 1.86.0 for every subprocess (Anchor, etc.) ---
      - name: Force cargo=1.86.0 via shim
        shell: bash
        run: |
          set -eux
          rustup toolchain install 1.86.0
          mkdir -p "$HOME/bin"
          cat > "$HOME/bin/cargo" <<'EOF'
          #!/usr/bin/env bash
          exec rustup run 1.86.0 cargo "$@"
          EOF
          chmod +x "$HOME/bin/cargo"
          # Prepend our shim so it shadows /usr/bin/cargo
          echo "$HOME/bin" >> "$GITHUB_PATH"
          # Prove it:
          which cargo
          cargo -V

      # --- Remove lockfiles so theyâ€™re regenerated by cargo 1.86.0 ---
      - name: Remove Cargo.lock files
        shell: bash
        run: |
          set -eux
          find . -name Cargo.lock -delete

      - name: Show toolchain
        shell: bash
        run: |
          set -eux
          which cargo
          cargo -V
          which anchor
          $ANCHOR_BIN --version
          which solana
          solana --version

      - name: Build Program
        shell: bash
        env:
          RUSTUP_TOOLCHAIN: "1.86.0"
        run: |
          set -eux
          cargo -V
          $ANCHOR_BIN clean
          $ANCHOR_BIN build

      - name: Upload IDL and artifacts
        uses: actions/upload-artifact@v4
        with:
          name: charityblock-artifacts
          path: |
            target/idl/**
            target/deploy/**
            target/types/**
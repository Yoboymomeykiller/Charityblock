name: Build SBF
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Modern Rust that understands lockfile v4
      - name: Rust toolchain 1.86.0
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: "1.86.0"
          components: rustfmt, clippy

      # --- Solana 1.18.20 (keeps your working fallback logic) ---
      - name: Install Solana 1.18.20 (with fallback)
        shell: bash
        run: |
          set -eux
          SOLANA_VER=v1.18.20

          # Try Solana Labs first (works on Actions), fall back to GitHub mirror
          MIRROR1="https://github.com/solana-labs/solana/releases/download/${SOLANA_VER}/solana-release-x86_64-unknown-linux-gnu.tar.bz2"
          MIRROR2="https://release.solana.com/${SOLANA_VER}/solana-release-x86_64-unknown-linux-gnu.tar.bz2"

          for URL in "$MIRROR1" "$MIRROR2"; do
            if curl -fL --retry 3 --retry-delay 2 -o /tmp/sol.tar.bz2 "$URL"; then
              echo "Downloaded solana from $URL"
              break
            fi
          done

          mkdir -p /tmp/sol-release
          tar -xjf /tmp/sol.tar.bz2 -C /tmp/sol-release

          mkdir -p "$HOME/solana-release/bin"
          cp -a /tmp/sol-release/solana-release/bin/* "$HOME/solana-release/bin"

          echo "$HOME/solana-release/bin" >> "$GITHUB_PATH"
          "$HOME/solana-release/bin/solana" --version

      # --- Anchor 0.31.1 via AVM (fixed URL + fallback to the tagged file) ---
      - name: Install Anchor CLI 0.31.1
        shell: bash
        run: |
          set -eux
          # Try 'master' (canonical), fall back to the v0.31.1 tag if master path moves
          CURL_OK=0
          curl -fsSL https://raw.githubusercontent.com/coral-xyz/anchor/master/avm/install.sh -o /tmp/avm_install.sh || CURL_OK=1
          if [ "$CURL_OK" -ne 0 ]; then
            curl -fsSL https://raw.githubusercontent.com/coral-xyz/anchor/v0.31.1/avm/install.sh -o /tmp/avm_install.sh
          fi
          bash /tmp/avm_install.sh

          # ensure we reference the installed binaries directly
          echo "$HOME/.avm/bin" >> "$GITHUB_PATH"
          "$HOME/.avm/bin/avm" install 0.31.1
          "$HOME/.avm/bin/avm" use 0.31.1
          "$HOME/.avm/bin/anchor" --version

      # Safety: ensure no incompatible lockfiles remain (Anchor will regenerate)
      - name: Remove Cargo.lock files
        run: |
          set -eux
          find . -name Cargo.lock -delete

      # Optional: print toolchain to logs
      - name: Show toolchain
        run: |
          rustc -V
          cargo -V
          anchor --version || true
          solana --version || true

      # Build the program
      - name: Build Program
        shell: bash
        run: |
          set -eux
          "$HOME/.avm/bin/anchor" clean
          "$HOME/.avm/bin/anchor" build

      # Upload built artifacts
      - name: Upload IDL and artifacts
        uses: actions/upload-artifact@v4
        with:
          name: charityblock-artifacts
          path: |
            target/idl/**
            target/deploy/**
            target/types/**
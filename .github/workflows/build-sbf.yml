name: Build SBF
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    # Make every cargo invocation prefer 1.86.0
    env:
      RUSTUP_TOOLCHAIN: "1.86.0"
      ANCHOR_RUSTC_VERSION: "1.86.0"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- Rust 1.86.0 (supports Cargo.lock v4) ---
      - name: Install Rust 1.86.0
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: "1.86.0"
          components: rustfmt, clippy

      # --- Solana 1.18.20 (robust mirrors) ---
      - name: Install Solana 1.18.20 (with fallback)
        shell: bash
        run: |
          set -eux
          SOLANA_VER=v1.18.20
          MIRROR1="https://github.com/solana-labs/solana/releases/download/${SOLANA_VER}/solana-release-x86_64-unknown-linux-gnu.tar.bz2"
          MIRROR2="https://release.solana.com/${SOLANA_VER}/solana-release-x86_64-unknown-linux-gnu.tar.bz2"

          OK=0
          for URL in "$MIRROR1" "$MIRROR2"; do
            if curl -fL --retry 3 --retry-delay 2 -o /tmp/sol.tar.bz2 "$URL"; then
              echo "Downloaded from $URL"
              OK=1
              break
            fi
            sleep 2
          done
          if [ "$OK" -ne 1 ]; then
            echo "Failed to download Solana ${SOLANA_VER} from all mirrors" >&2
            exit 1
          fi

          mkdir -p /tmp/sol-release
          tar -xjf /tmp/sol.tar.bz2 -C /tmp/sol-release

          mkdir -p "$HOME/solana-release/bin"
          cp -a /tmp/sol-release/solana-release/bin/* "$HOME/solana-release/bin"

          # Persist PATH for subsequent steps
          echo "$HOME/solana-release/bin" >> "$GITHUB_PATH"
          "$HOME/solana-release/bin/solana" --version

      # --- AVM + Anchor 0.31.1 (compiled via cargo) ---
      - name: Install AVM and Anchor 0.31.1
        shell: bash
        run: |
          set -eux
          # Ensure cargo is on PATH
          echo "$HOME/.cargo/bin" >> "$GITHUB_PATH"

          # Install avm and select Anchor
          cargo install --git https://github.com/coral-xyz/anchor --tag v0.31.1 avm --locked
          avm install 0.31.1
          avm use 0.31.1

          # AVM exposes the 'anchor' shim here
          echo "$HOME/.avm/bin" >> "$GITHUB_PATH"
          anchor --version

          # For later steps
          echo "ANCHOR_BIN=anchor" >> "$GITHUB_ENV"

      # --- Prepare & clean old lockfiles ---
      - name: Prepare environment
        shell: bash
        run: |
          set -eux
          rustup default 1.86.0
          which cargo
          cargo -V

          # Delete any stale lockfiles; they'll be regenerated by the pinned cargo
          find . -name Cargo.lock -delete

      # --- Build with forced Cargo/Rust 1.86.0 binaries ---
      - name: Build Program
        shell: bash
        env:
          RUSTUP_TOOLCHAIN: "1.86.0"
          ANCHOR_RUSTC_VERSION: "1.86.0"
        run: |
          set -eux

          # Absolute paths to the pinned toolchain's binaries
          CARGO_BIN="$(rustup which cargo)"
          RUSTC_BIN="$(rustup which rustc)"

          echo "Using cargo at: $CARGO_BIN"
          "$CARGO_BIN" -V
          "$RUSTC_BIN"  -V
          rustup show

          # Clean, then build forcing these exact binaries
          $ANCHOR_BIN clean
          CARGO="$CARGO_BIN" RUSTC="$RUSTC_BIN" \
            $ANCHOR_BIN build

      # --- Collect artifacts ---
      - name: Upload IDL and artifacts
        uses: actions/upload-artifact@v4
        with:
          name: charityblock-artifacts
          path: |
            target/idl/**
            target/deploy/**
            target/types/**